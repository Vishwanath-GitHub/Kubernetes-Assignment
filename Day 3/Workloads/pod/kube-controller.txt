{"log":"I0812 08:36:10.428715       1 serving.go:319] Generated self-signed cert in-memory\n","stream":"stderr","time":"2019-08-12T08:36:10.430140785Z"}
{"log":"I0812 08:36:12.662565       1 controllermanager.go:164] Version: v1.15.2\n","stream":"stderr","time":"2019-08-12T08:36:12.662968211Z"}
{"log":"I0812 08:36:12.663519       1 secure_serving.go:116] Serving securely on 127.0.0.1:10257\n","stream":"stderr","time":"2019-08-12T08:36:12.663637378Z"}
{"log":"I0812 08:36:12.664445       1 deprecated_insecure_serving.go:53] Serving insecurely on [::]:10252\n","stream":"stderr","time":"2019-08-12T08:36:12.664688606Z"}
{"log":"I0812 08:36:12.664661       1 leaderelection.go:235] attempting to acquire leader lease  kube-system/kube-controller-manager...\n","stream":"stderr","time":"2019-08-12T08:36:12.664774199Z"}
{"log":"E0812 08:36:22.679959       1 leaderelection.go:324] error retrieving resource lock kube-system/kube-controller-manager: Get https://10.0.2.15:6443/api/v1/namespaces/kube-system/endpoints/kube-controller-manager?timeout=10s: net/http: TLS handshake timeout\n","stream":"stderr","time":"2019-08-12T08:36:22.680082654Z"}
{"log":"E0812 08:36:26.321199       1 leaderelection.go:324] error retrieving resource lock kube-system/kube-controller-manager: endpoints \"kube-controller-manager\" is forbidden: User \"system:kube-controller-manager\" cannot get resource \"endpoints\" in API group \"\" in the namespace \"kube-system\"\n","stream":"stderr","time":"2019-08-12T08:36:26.321313431Z"}
{"log":"I0812 08:36:30.303963       1 leaderelection.go:245] successfully acquired lease kube-system/kube-controller-manager\n","stream":"stderr","time":"2019-08-12T08:36:30.304992223Z"}
{"log":"I0812 08:36:30.304118       1 event.go:258] Event(v1.ObjectReference{Kind:\"Endpoints\", Namespace:\"kube-system\", Name:\"kube-controller-manager\", UID:\"2d8e7ad4-fd33-4ffa-b5b3-97e8b0f318e8\", APIVersion:\"v1\", ResourceVersion:\"159\", FieldPath:\"\"}): type: 'Normal' reason: 'LeaderElection' vishwanath-VirtualBox_8a6bc0d5-bbd1-4450-a5e5-7e9647f29ec2 became leader\n","stream":"stderr","time":"2019-08-12T08:36:30.305091818Z"}
{"log":"I0812 08:36:30.569345       1 plugins.go:103] No cloud provider specified.\n","stream":"stderr","time":"2019-08-12T08:36:30.570466679Z"}
{"log":"I0812 08:36:30.584989       1 controller_utils.go:1029] Waiting for caches to sync for tokens controller\n","stream":"stderr","time":"2019-08-12T08:36:30.585572255Z"}
{"log":"I0812 08:36:30.686122       1 controller_utils.go:1036] Caches are synced for tokens controller\n","stream":"stderr","time":"2019-08-12T08:36:30.687788111Z"}
{"log":"I0812 08:36:30.812156       1 controllermanager.go:532] Started \"ttl\"\n","stream":"stderr","time":"2019-08-12T08:36:30.812356435Z"}
{"log":"I0812 08:36:30.823650       1 ttl_controller.go:116] Starting TTL controller\n","stream":"stderr","time":"2019-08-12T08:36:30.823848196Z"}
{"log":"I0812 08:36:30.823719       1 controller_utils.go:1029] Waiting for caches to sync for TTL controller\n","stream":"stderr","time":"2019-08-12T08:36:30.823889277Z"}
{"log":"I0812 08:36:30.905020       1 controller_utils.go:1029] Waiting for caches to sync for bootstrap_signer controller\n","stream":"stderr","time":"2019-08-12T08:36:30.905193935Z"}
{"log":"I0812 08:36:30.905271       1 controllermanager.go:532] Started \"bootstrapsigner\"\n","stream":"stderr","time":"2019-08-12T08:36:30.905495056Z"}
{"log":"I0812 08:36:30.958663       1 controllermanager.go:532] Started \"tokencleaner\"\n","stream":"stderr","time":"2019-08-12T08:36:30.958890409Z"}
{"log":"I0812 08:36:30.959345       1 tokencleaner.go:116] Starting token cleaner controller\n","stream":"stderr","time":"2019-08-12T08:36:30.959478929Z"}
{"log":"I0812 08:36:30.959388       1 controller_utils.go:1029] Waiting for caches to sync for token_cleaner controller\n","stream":"stderr","time":"2019-08-12T08:36:30.959509363Z"}
{"log":"I0812 08:36:31.044892       1 node_ipam_controller.go:94] Sending events to api server.\n","stream":"stderr","time":"2019-08-12T08:36:31.045104877Z"}
{"log":"I0812 08:36:31.059781       1 controller_utils.go:1036] Caches are synced for token_cleaner controller\n","stream":"stderr","time":"2019-08-12T08:36:31.059962681Z"}
{"log":"I0812 08:36:41.157403       1 range_allocator.go:78] Sending events to api server.\n","stream":"stderr","time":"2019-08-12T08:36:41.159535691Z"}
{"log":"I0812 08:36:41.159040       1 range_allocator.go:99] No Service CIDR provided. Skipping filtering out service addresses.\n","stream":"stderr","time":"2019-08-12T08:36:41.159627413Z"}
{"log":"I0812 08:36:41.159232       1 range_allocator.go:105] Node vishwanath-virtualbox has no CIDR, ignoring\n","stream":"stderr","time":"2019-08-12T08:36:41.159662764Z"}
{"log":"I0812 08:36:41.159685       1 controllermanager.go:532] Started \"nodeipam\"\n","stream":"stderr","time":"2019-08-12T08:36:41.160279176Z"}
{"log":"I0812 08:36:41.160122       1 node_ipam_controller.go:162] Starting ipam controller\n","stream":"stderr","time":"2019-08-12T08:36:41.160571359Z"}
{"log":"I0812 08:36:41.160905       1 controller_utils.go:1029] Waiting for caches to sync for node controller\n","stream":"stderr","time":"2019-08-12T08:36:41.161607678Z"}
{"log":"I0812 08:36:41.277838       1 controllermanager.go:532] Started \"pv-protection\"\n","stream":"stderr","time":"2019-08-12T08:36:41.278043155Z"}
{"log":"I0812 08:36:41.280437       1 pv_protection_controller.go:82] Starting PV protection controller\n","stream":"stderr","time":"2019-08-12T08:36:41.280688191Z"}
{"log":"I0812 08:36:41.280872       1 controller_utils.go:1029] Waiting for caches to sync for PV protection controller\n","stream":"stderr","time":"2019-08-12T08:36:41.280995203Z"}
{"log":"I0812 08:36:41.347956       1 controllermanager.go:532] Started \"replicaset\"\n","stream":"stderr","time":"2019-08-12T08:36:41.348106346Z"}
{"log":"I0812 08:36:41.347845       1 replica_set.go:182] Starting replicaset controller\n","stream":"stderr","time":"2019-08-12T08:36:41.348604103Z"}
{"log":"I0812 08:36:41.348361       1 controller_utils.go:1029] Waiting for caches to sync for ReplicaSet controller\n","stream":"stderr","time":"2019-08-12T08:36:41.348623325Z"}
{"log":"I0812 08:36:41.434905       1 controllermanager.go:532] Started \"horizontalpodautoscaling\"\n","stream":"stderr","time":"2019-08-12T08:36:41.435049403Z"}
{"log":"I0812 08:36:41.435145       1 horizontal.go:156] Starting HPA controller\n","stream":"stderr","time":"2019-08-12T08:36:41.435224253Z"}
{"log":"I0812 08:36:41.435215       1 controller_utils.go:1029] Waiting for caches to sync for HPA controller\n","stream":"stderr","time":"2019-08-12T08:36:41.435372758Z"}
{"log":"I0812 08:36:41.700205       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for daemonsets.extensions\n","stream":"stderr","time":"2019-08-12T08:36:41.700536894Z"}
{"log":"I0812 08:36:41.700662       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for replicasets.apps\n","stream":"stderr","time":"2019-08-12T08:36:41.700922116Z"}
{"log":"I0812 08:36:41.701037       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for daemonsets.apps\n","stream":"stderr","time":"2019-08-12T08:36:41.701289386Z"}
{"log":"I0812 08:36:41.701437       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for events.events.k8s.io\n","stream":"stderr","time":"2019-08-12T08:36:41.701709281Z"}
{"log":"I0812 08:36:41.701712       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for cronjobs.batch\n","stream":"stderr","time":"2019-08-12T08:36:41.701895864Z"}
{"log":"I0812 08:36:41.702062       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for leases.coordination.k8s.io\n","stream":"stderr","time":"2019-08-12T08:36:41.702304472Z"}
{"log":"I0812 08:36:41.702457       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for networkpolicies.extensions\n","stream":"stderr","time":"2019-08-12T08:36:41.702657291Z"}
{"log":"I0812 08:36:41.702803       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for replicasets.extensions\n","stream":"stderr","time":"2019-08-12T08:36:41.703018638Z"}
{"log":"I0812 08:36:41.703044       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for jobs.batch\n","stream":"stderr","time":"2019-08-12T08:36:41.70326847Z"}
{"log":"I0812 08:36:41.703263       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for limitranges\n","stream":"stderr","time":"2019-08-12T08:36:41.70349233Z"}
{"log":"W0812 08:36:41.704701       1 shared_informer.go:364] resyncPeriod 71992459510211 is smaller than resyncCheckPeriod 79432621274881 and the informer has already started. Changing it to 79432621274881\n","stream":"stderr","time":"2019-08-12T08:36:41.705019636Z"}
{"log":"I0812 08:36:41.705315       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for ingresses.networking.k8s.io\n","stream":"stderr","time":"2019-08-12T08:36:41.705559202Z"}
{"log":"I0812 08:36:41.705620       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for controllerrevisions.apps\n","stream":"stderr","time":"2019-08-12T08:36:41.705913588Z"}
{"log":"I0812 08:36:41.705930       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for statefulsets.apps\n","stream":"stderr","time":"2019-08-12T08:36:41.706100912Z"}
{"log":"I0812 08:36:41.706158       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for networkpolicies.networking.k8s.io\n","stream":"stderr","time":"2019-08-12T08:36:41.706435318Z"}
{"log":"I0812 08:36:41.706457       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for roles.rbac.authorization.k8s.io\n","stream":"stderr","time":"2019-08-12T08:36:41.706639859Z"}
{"log":"I0812 08:36:41.706668       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for rolebindings.rbac.authorization.k8s.io\n","stream":"stderr","time":"2019-08-12T08:36:41.70689508Z"}
{"log":"W0812 08:36:41.707172       1 shared_informer.go:364] resyncPeriod 61623248044340 is smaller than resyncCheckPeriod 79432621274881 and the informer has already started. Changing it to 79432621274881\n","stream":"stderr","time":"2019-08-12T08:36:41.707378406Z"}
{"log":"I0812 08:36:41.707431       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for serviceaccounts\n","stream":"stderr","time":"2019-08-12T08:36:41.707585711Z"}
{"log":"I0812 08:36:41.707780       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for deployments.extensions\n","stream":"stderr","time":"2019-08-12T08:36:41.708001141Z"}
{"log":"I0812 08:36:41.707989       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for ingresses.extensions\n","stream":"stderr","time":"2019-08-12T08:36:41.708187291Z"}
{"log":"I0812 08:36:41.708245       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for endpoints\n","stream":"stderr","time":"2019-08-12T08:36:41.708568469Z"}
{"log":"I0812 08:36:41.708470       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for podtemplates\n","stream":"stderr","time":"2019-08-12T08:36:41.708592663Z"}
{"log":"I0812 08:36:41.708609       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for deployments.apps\n","stream":"stderr","time":"2019-08-12T08:36:41.70886473Z"}
{"log":"I0812 08:36:41.709017       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for poddisruptionbudgets.policy\n","stream":"stderr","time":"2019-08-12T08:36:41.709282563Z"}
{"log":"I0812 08:36:41.709483       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for horizontalpodautoscalers.autoscaling\n","stream":"stderr","time":"2019-08-12T08:36:41.710339426Z"}
{"log":"I0812 08:36:41.709573       1 controllermanager.go:532] Started \"resourcequota\"\n","stream":"stderr","time":"2019-08-12T08:36:41.710370113Z"}
{"log":"I0812 08:36:41.709682       1 resource_quota_controller.go:271] Starting resource quota controller\n","stream":"stderr","time":"2019-08-12T08:36:41.711317682Z"}
{"log":"I0812 08:36:41.711609       1 resource_quota_monitor.go:303] QuotaMonitor running\n","stream":"stderr","time":"2019-08-12T08:36:41.711867697Z"}
{"log":"I0812 08:36:41.712001       1 controller_utils.go:1029] Waiting for caches to sync for resource quota controller\n","stream":"stderr","time":"2019-08-12T08:36:41.712326745Z"}
{"log":"I0812 08:36:42.221342       1 controllermanager.go:532] Started \"garbagecollector\"\n","stream":"stderr","time":"2019-08-12T08:36:42.221981555Z"}
{"log":"I0812 08:36:42.221618       1 garbagecollector.go:128] Starting garbage collector controller\n","stream":"stderr","time":"2019-08-12T08:36:42.222012321Z"}
{"log":"I0812 08:36:42.221646       1 controller_utils.go:1029] Waiting for caches to sync for garbage collector controller\n","stream":"stderr","time":"2019-08-12T08:36:42.222020388Z"}
{"log":"I0812 08:36:42.221670       1 graph_builder.go:280] GraphBuilder running\n","stream":"stderr","time":"2019-08-12T08:36:42.222028148Z"}
{"log":"I0812 08:36:42.255757       1 controllermanager.go:532] Started \"csrcleaner\"\n","stream":"stderr","time":"2019-08-12T08:36:42.255893166Z"}
{"log":"I0812 08:36:42.256282       1 cleaner.go:81] Starting CSR cleaner controller\n","stream":"stderr","time":"2019-08-12T08:36:42.256371411Z"}
{"log":"I0812 08:36:42.271794       1 node_lifecycle_controller.go:290] Sending events to api server.\n","stream":"stderr","time":"2019-08-12T08:36:42.271928484Z"}
{"log":"I0812 08:36:42.272401       1 node_lifecycle_controller.go:323] Controller is using taint based evictions.\n","stream":"stderr","time":"2019-08-12T08:36:42.272457681Z"}
{"log":"I0812 08:36:42.272673       1 taint_manager.go:175] Sending events to api server.\n","stream":"stderr","time":"2019-08-12T08:36:42.272778453Z"}
{"log":"I0812 08:36:42.273330       1 node_lifecycle_controller.go:388] Controller will reconcile labels.\n","stream":"stderr","time":"2019-08-12T08:36:42.273374704Z"}
{"log":"I0812 08:36:42.273434       1 node_lifecycle_controller.go:401] Controller will taint node by condition.\n","stream":"stderr","time":"2019-08-12T08:36:42.273473789Z"}
{"log":"I0812 08:36:42.273537       1 controllermanager.go:532] Started \"nodelifecycle\"\n","stream":"stderr","time":"2019-08-12T08:36:42.273577923Z"}
{"log":"I0812 08:36:42.273932       1 node_lifecycle_controller.go:425] Starting node controller\n","stream":"stderr","time":"2019-08-12T08:36:42.274041772Z"}
{"log":"I0812 08:36:42.274128       1 controller_utils.go:1029] Waiting for caches to sync for taint controller\n","stream":"stderr","time":"2019-08-12T08:36:42.274255905Z"}
{"log":"E0812 08:36:42.322281       1 core.go:76] Failed to start service controller: WARNING: no cloud provider provided, services of type LoadBalancer will fail\n","stream":"stderr","time":"2019-08-12T08:36:42.32254509Z"}
{"log":"W0812 08:36:42.322687       1 controllermanager.go:524] Skipping \"service\"\n","stream":"stderr","time":"2019-08-12T08:36:42.32278967Z"}
{"log":"W0812 08:36:42.322859       1 core.go:174] configure-cloud-routes is set, but no cloud provider specified. Will not configure cloud provider routes.\n","stream":"stderr","time":"2019-08-12T08:36:42.322952956Z"}
{"log":"W0812 08:36:42.323037       1 controllermanager.go:524] Skipping \"route\"\n","stream":"stderr","time":"2019-08-12T08:36:42.323137924Z"}
{"log":"I0812 08:36:42.337699       1 node_lifecycle_controller.go:77] Sending events to api server\n","stream":"stderr","time":"2019-08-12T08:36:42.337863736Z"}
{"log":"E0812 08:36:42.338052       1 core.go:160] failed to start cloud node lifecycle controller: no cloud provider provided\n","stream":"stderr","time":"2019-08-12T08:36:42.3381541Z"}
{"log":"W0812 08:36:42.338211       1 controllermanager.go:524] Skipping \"cloud-node-lifecycle\"\n","stream":"stderr","time":"2019-08-12T08:36:42.338306426Z"}
{"log":"W0812 08:36:42.591743       1 probe.go:268] Flexvolume plugin directory at /usr/libexec/kubernetes/kubelet-plugins/volume/exec/ does not exist. Recreating.\n","stream":"stderr","time":"2019-08-12T08:36:42.591884686Z"}
{"log":"I0812 08:36:42.643642       1 attach_detach_controller.go:335] Starting attach detach controller\n","stream":"stderr","time":"2019-08-12T08:36:42.64439783Z"}
{"log":"I0812 08:36:42.643670       1 controller_utils.go:1029] Waiting for caches to sync for attach detach controller\n","stream":"stderr","time":"2019-08-12T08:36:42.64445365Z"}
{"log":"I0812 08:36:42.643696       1 controllermanager.go:532] Started \"attachdetach\"\n","stream":"stderr","time":"2019-08-12T08:36:42.644462357Z"}
{"log":"I0812 08:36:42.815258       1 controllermanager.go:532] Started \"replicationcontroller\"\n","stream":"stderr","time":"2019-08-12T08:36:42.81548875Z"}
{"log":"I0812 08:36:42.815319       1 replica_set.go:182] Starting replicationcontroller controller\n","stream":"stderr","time":"2019-08-12T08:36:42.815519064Z"}
{"log":"I0812 08:36:42.815364       1 controller_utils.go:1029] Waiting for caches to sync for ReplicationController controller\n","stream":"stderr","time":"2019-08-12T08:36:42.815527703Z"}
{"log":"I0812 08:36:43.081116       1 controllermanager.go:532] Started \"daemonset\"\n","stream":"stderr","time":"2019-08-12T08:36:43.08128542Z"}
{"log":"W0812 08:36:43.081229       1 controllermanager.go:524] Skipping \"root-ca-cert-publisher\"\n","stream":"stderr","time":"2019-08-12T08:36:43.081318451Z"}
{"log":"I0812 08:36:43.081412       1 daemon_controller.go:267] Starting daemon sets controller\n","stream":"stderr","time":"2019-08-12T08:36:43.081500039Z"}
{"log":"I0812 08:36:43.081520       1 controller_utils.go:1029] Waiting for caches to sync for daemon sets controller\n","stream":"stderr","time":"2019-08-12T08:36:43.081613819Z"}
{"log":"I0812 08:36:43.319007       1 controllermanager.go:532] Started \"statefulset\"\n","stream":"stderr","time":"2019-08-12T08:36:43.319221393Z"}
{"log":"I0812 08:36:43.319082       1 stateful_set.go:145] Starting stateful set controller\n","stream":"stderr","time":"2019-08-12T08:36:43.319250096Z"}
{"log":"I0812 08:36:43.319820       1 controller_utils.go:1029] Waiting for caches to sync for stateful set controller\n","stream":"stderr","time":"2019-08-12T08:36:43.320042966Z"}
{"log":"I0812 08:36:43.468932       1 controllermanager.go:532] Started \"csrsigning\"\n","stream":"stderr","time":"2019-08-12T08:36:43.46999053Z"}
{"log":"I0812 08:36:43.469327       1 certificate_controller.go:113] Starting certificate controller\n","stream":"stderr","time":"2019-08-12T08:36:43.470052495Z"}
{"log":"I0812 08:36:43.469838       1 controller_utils.go:1029] Waiting for caches to sync for certificate controller\n","stream":"stderr","time":"2019-08-12T08:36:43.470137675Z"}
{"log":"I0812 08:36:43.725611       1 controllermanager.go:532] Started \"persistentvolume-expander\"\n","stream":"stderr","time":"2019-08-12T08:36:43.726097538Z"}
{"log":"I0812 08:36:43.726897       1 expand_controller.go:300] Starting expand controller\n","stream":"stderr","time":"2019-08-12T08:36:43.72746023Z"}
{"log":"I0812 08:36:43.727922       1 controller_utils.go:1029] Waiting for caches to sync for expand controller\n","stream":"stderr","time":"2019-08-12T08:36:43.728183135Z"}
{"log":"I0812 08:36:43.963437       1 controllermanager.go:532] Started \"clusterrole-aggregation\"\n","stream":"stderr","time":"2019-08-12T08:36:43.96370084Z"}
{"log":"I0812 08:36:43.963637       1 clusterroleaggregation_controller.go:148] Starting ClusterRoleAggregator\n","stream":"stderr","time":"2019-08-12T08:36:43.96378828Z"}
{"log":"I0812 08:36:43.963694       1 controller_utils.go:1029] Waiting for caches to sync for ClusterRoleAggregator controller\n","stream":"stderr","time":"2019-08-12T08:36:43.963891884Z"}
{"log":"I0812 08:36:44.221849       1 pvc_protection_controller.go:100] Starting PVC protection controller\n","stream":"stderr","time":"2019-08-12T08:36:44.222390188Z"}
{"log":"I0812 08:36:44.221970       1 controller_utils.go:1029] Waiting for caches to sync for PVC protection controller\n","stream":"stderr","time":"2019-08-12T08:36:44.222453243Z"}
{"log":"I0812 08:36:44.222110       1 controllermanager.go:532] Started \"pvc-protection\"\n","stream":"stderr","time":"2019-08-12T08:36:44.22247791Z"}
{"log":"I0812 08:36:44.647714       1 controllermanager.go:532] Started \"endpoint\"\n","stream":"stderr","time":"2019-08-12T08:36:44.648577699Z"}
{"log":"I0812 08:36:44.647903       1 endpoints_controller.go:166] Starting endpoint controller\n","stream":"stderr","time":"2019-08-12T08:36:44.649777549Z"}
{"log":"I0812 08:36:44.649874       1 controller_utils.go:1029] Waiting for caches to sync for endpoint controller\n","stream":"stderr","time":"2019-08-12T08:36:44.650856868Z"}
{"log":"I0812 08:36:44.714520       1 controllermanager.go:532] Started \"job\"\n","stream":"stderr","time":"2019-08-12T08:36:44.714732274Z"}
{"log":"W0812 08:36:44.715032       1 controllermanager.go:524] Skipping \"ttl-after-finished\"\n","stream":"stderr","time":"2019-08-12T08:36:44.715166199Z"}
{"log":"I0812 08:36:44.714686       1 job_controller.go:143] Starting job controller\n","stream":"stderr","time":"2019-08-12T08:36:44.71537209Z"}
{"log":"I0812 08:36:44.715358       1 controller_utils.go:1029] Waiting for caches to sync for job controller\n","stream":"stderr","time":"2019-08-12T08:36:44.715541375Z"}
{"log":"I0812 08:36:45.121027       1 controllermanager.go:532] Started \"disruption\"\n","stream":"stderr","time":"2019-08-12T08:36:45.121312996Z"}
{"log":"I0812 08:36:45.121760       1 disruption.go:333] Starting disruption controller\n","stream":"stderr","time":"2019-08-12T08:36:45.121967439Z"}
{"log":"I0812 08:36:45.121909       1 controller_utils.go:1029] Waiting for caches to sync for disruption controller\n","stream":"stderr","time":"2019-08-12T08:36:45.122185186Z"}
{"log":"I0812 08:36:45.424336       1 controllermanager.go:532] Started \"persistentvolume-binder\"\n","stream":"stderr","time":"2019-08-12T08:36:45.424624752Z"}
{"log":"I0812 08:36:45.424503       1 pv_controller_base.go:282] Starting persistent volume controller\n","stream":"stderr","time":"2019-08-12T08:36:45.424786092Z"}
{"log":"I0812 08:36:45.424627       1 controller_utils.go:1029] Waiting for caches to sync for persistent volume controller\n","stream":"stderr","time":"2019-08-12T08:36:45.424800711Z"}
{"log":"I0812 08:36:45.642333       1 controllermanager.go:532] Started \"serviceaccount\"\n","stream":"stderr","time":"2019-08-12T08:36:45.643579828Z"}
{"log":"I0812 08:36:45.642637       1 serviceaccounts_controller.go:117] Starting service account controller\n","stream":"stderr","time":"2019-08-12T08:36:45.643694649Z"}
{"log":"I0812 08:36:45.642974       1 controller_utils.go:1029] Waiting for caches to sync for service account controller\n","stream":"stderr","time":"2019-08-12T08:36:45.643741702Z"}
{"log":"I0812 08:36:45.863458       1 controllermanager.go:532] Started \"cronjob\"\n","stream":"stderr","time":"2019-08-12T08:36:45.865432837Z"}
{"log":"I0812 08:36:45.863564       1 cronjob_controller.go:96] Starting CronJob Manager\n","stream":"stderr","time":"2019-08-12T08:36:45.865471606Z"}
{"log":"E0812 08:36:46.028519       1 prometheus.go:55] failed to register depth metric certificate: duplicate metrics collector registration attempted\n","stream":"stderr","time":"2019-08-12T08:36:46.02968545Z"}
{"log":"E0812 08:36:46.028640       1 prometheus.go:68] failed to register adds metric certificate: duplicate metrics collector registration attempted\n","stream":"stderr","time":"2019-08-12T08:36:46.029715087Z"}
{"log":"E0812 08:36:46.028732       1 prometheus.go:82] failed to register latency metric certificate: duplicate metrics collector registration attempted\n","stream":"stderr","time":"2019-08-12T08:36:46.029723439Z"}
{"log":"E0812 08:36:46.028772       1 prometheus.go:96] failed to register workDuration metric certificate: duplicate metrics collector registration attempted\n","stream":"stderr","time":"2019-08-12T08:36:46.029731366Z"}
{"log":"E0812 08:36:46.028854       1 prometheus.go:112] failed to register unfinished metric certificate: duplicate metrics collector registration attempted\n","stream":"stderr","time":"2019-08-12T08:36:46.02973928Z"}
{"log":"E0812 08:36:46.028894       1 prometheus.go:126] failed to register unfinished metric certificate: duplicate metrics collector registration attempted\n","stream":"stderr","time":"2019-08-12T08:36:46.029747245Z"}
{"log":"E0812 08:36:46.028960       1 prometheus.go:152] failed to register depth metric certificate: duplicate metrics collector registration attempted\n","stream":"stderr","time":"2019-08-12T08:36:46.029769091Z"}
{"log":"E0812 08:36:46.028990       1 prometheus.go:164] failed to register adds metric certificate: duplicate metrics collector registration attempted\n","stream":"stderr","time":"2019-08-12T08:36:46.029777772Z"}
{"log":"E0812 08:36:46.029046       1 prometheus.go:176] failed to register latency metric certificate: duplicate metrics collector registration attempted\n","stream":"stderr","time":"2019-08-12T08:36:46.02978565Z"}
{"log":"E0812 08:36:46.029145       1 prometheus.go:188] failed to register work_duration metric certificate: duplicate metrics collector registration attempted\n","stream":"stderr","time":"2019-08-12T08:36:46.029793565Z"}
{"log":"E0812 08:36:46.029192       1 prometheus.go:203] failed to register unfinished_work_seconds metric certificate: duplicate metrics collector registration attempted\n","stream":"stderr","time":"2019-08-12T08:36:46.029801544Z"}
{"log":"E0812 08:36:46.029232       1 prometheus.go:216] failed to register longest_running_processor_microseconds metric certificate: duplicate metrics collector registration attempted\n","stream":"stderr","time":"2019-08-12T08:36:46.029809524Z"}
{"log":"E0812 08:36:46.029321       1 prometheus.go:139] failed to register retries metric certificate: duplicate metrics collector registration attempted\n","stream":"stderr","time":"2019-08-12T08:36:46.029817598Z"}
{"log":"E0812 08:36:46.029355       1 prometheus.go:228] failed to register retries metric certificate: duplicate metrics collector registration attempted\n","stream":"stderr","time":"2019-08-12T08:36:46.029826528Z"}
{"log":"I0812 08:36:46.029392       1 controllermanager.go:532] Started \"csrapproving\"\n","stream":"stderr","time":"2019-08-12T08:36:46.029869975Z"}
{"log":"I0812 08:36:46.029442       1 certificate_controller.go:113] Starting certificate controller\n","stream":"stderr","time":"2019-08-12T08:36:46.029913486Z"}
{"log":"I0812 08:36:46.029500       1 controller_utils.go:1029] Waiting for caches to sync for certificate controller\n","stream":"stderr","time":"2019-08-12T08:36:46.029924042Z"}
{"log":"I0812 08:36:46.328002       1 controllermanager.go:532] Started \"podgc\"\n","stream":"stderr","time":"2019-08-12T08:36:46.328456783Z"}
{"log":"I0812 08:36:46.328498       1 gc_controller.go:76] Starting GC controller\n","stream":"stderr","time":"2019-08-12T08:36:46.328708122Z"}
{"log":"I0812 08:36:46.328748       1 controller_utils.go:1029] Waiting for caches to sync for GC controller\n","stream":"stderr","time":"2019-08-12T08:36:46.328897118Z"}
{"log":"I0812 08:36:46.558416       1 controllermanager.go:532] Started \"namespace\"\n","stream":"stderr","time":"2019-08-12T08:36:46.558739645Z"}
{"log":"I0812 08:36:46.558508       1 namespace_controller.go:186] Starting namespace controller\n","stream":"stderr","time":"2019-08-12T08:36:46.558874297Z"}
{"log":"I0812 08:36:46.558538       1 controller_utils.go:1029] Waiting for caches to sync for namespace controller\n","stream":"stderr","time":"2019-08-12T08:36:46.558886905Z"}
{"log":"I0812 08:36:46.770287       1 controllermanager.go:532] Started \"deployment\"\n","stream":"stderr","time":"2019-08-12T08:36:46.770554994Z"}
{"log":"I0812 08:36:46.771816       1 controller_utils.go:1029] Waiting for caches to sync for resource quota controller\n","stream":"stderr","time":"2019-08-12T08:36:46.772031818Z"}
{"log":"I0812 08:36:46.791509       1 deployment_controller.go:152] Starting deployment controller\n","stream":"stderr","time":"2019-08-12T08:36:46.791771805Z"}
{"log":"I0812 08:36:46.791560       1 controller_utils.go:1029] Waiting for caches to sync for deployment controller\n","stream":"stderr","time":"2019-08-12T08:36:46.791835711Z"}
{"log":"I0812 08:36:46.809733       1 controller_utils.go:1029] Waiting for caches to sync for garbage collector controller\n","stream":"stderr","time":"2019-08-12T08:36:46.809994207Z"}
{"log":"I0812 08:36:46.844377       1 controller_utils.go:1036] Caches are synced for service account controller\n","stream":"stderr","time":"2019-08-12T08:36:46.844614567Z"}
{"log":"I0812 08:36:46.873957       1 controller_utils.go:1036] Caches are synced for namespace controller\n","stream":"stderr","time":"2019-08-12T08:36:46.874179318Z"}
{"log":"I0812 08:36:46.883882       1 controller_utils.go:1036] Caches are synced for PV protection controller\n","stream":"stderr","time":"2019-08-12T08:36:46.884070759Z"}
{"log":"W0812 08:36:46.908454       1 actual_state_of_world.go:506] Failed to update statusUpdateNeeded field in actual state of world: Failed to set statusUpdateNeeded to needed true, because nodeName=\"vishwanath-virtualbox\" does not exist\n","stream":"stderr","time":"2019-08-12T08:36:46.908887348Z"}
{"log":"I0812 08:36:46.926719       1 controller_utils.go:1036] Caches are synced for TTL controller\n","stream":"stderr","time":"2019-08-12T08:36:46.92697884Z"}
{"log":"I0812 08:36:46.933980       1 controller_utils.go:1036] Caches are synced for certificate controller\n","stream":"stderr","time":"2019-08-12T08:36:46.934202551Z"}
{"log":"I0812 08:36:46.963659       1 controller_utils.go:1036] Caches are synced for node controller\n","stream":"stderr","time":"2019-08-12T08:36:46.966861688Z"}
{"log":"I0812 08:36:46.963683       1 range_allocator.go:157] Starting range CIDR allocator\n","stream":"stderr","time":"2019-08-12T08:36:46.966889992Z"}
{"log":"I0812 08:36:46.963702       1 controller_utils.go:1029] Waiting for caches to sync for cidrallocator controller\n","stream":"stderr","time":"2019-08-12T08:36:46.966897966Z"}
{"log":"I0812 08:36:46.964246       1 controller_utils.go:1036] Caches are synced for expand controller\n","stream":"stderr","time":"2019-08-12T08:36:46.966905731Z"}
{"log":"I0812 08:36:46.971600       1 controller_utils.go:1036] Caches are synced for certificate controller\n","stream":"stderr","time":"2019-08-12T08:36:46.971842327Z"}
{"log":"I0812 08:36:47.007248       1 controller_utils.go:1036] Caches are synced for bootstrap_signer controller\n","stream":"stderr","time":"2019-08-12T08:36:47.009721664Z"}
{"log":"I0812 08:36:47.067606       1 controller_utils.go:1036] Caches are synced for cidrallocator controller\n","stream":"stderr","time":"2019-08-12T08:36:47.067774304Z"}
{"log":"I0812 08:36:47.068515       1 controller_utils.go:1036] Caches are synced for ClusterRoleAggregator controller\n","stream":"stderr","time":"2019-08-12T08:36:47.068664802Z"}
{"log":"I0812 08:36:47.080816       1 log.go:172] [INFO] signed certificate with serial number 380368374583950739592209827810648033832051561520\n","stream":"stderr","time":"2019-08-12T08:36:47.081055282Z"}
{"log":"I0812 08:36:47.092126       1 range_allocator.go:310] Set node vishwanath-virtualbox PodCIDR to 192.168.0.0/24\n","stream":"stderr","time":"2019-08-12T08:36:47.092265356Z"}
{"log":"I0812 08:36:47.131185       1 controller_utils.go:1036] Caches are synced for GC controller\n","stream":"stderr","time":"2019-08-12T08:36:47.13136282Z"}
{"log":"I0812 08:36:47.147243       1 controller_utils.go:1036] Caches are synced for attach detach controller\n","stream":"stderr","time":"2019-08-12T08:36:47.147442822Z"}
{"log":"I0812 08:36:47.149963       1 controller_utils.go:1036] Caches are synced for ReplicaSet controller\n","stream":"stderr","time":"2019-08-12T08:36:47.150133736Z"}
{"log":"I0812 08:36:47.150362       1 controller_utils.go:1036] Caches are synced for HPA controller\n","stream":"stderr","time":"2019-08-12T08:36:47.150440695Z"}
{"log":"I0812 08:36:47.197899       1 controller_utils.go:1036] Caches are synced for deployment controller\n","stream":"stderr","time":"2019-08-12T08:36:47.198360944Z"}
{"log":"E0812 08:36:47.202812       1 clusterroleaggregation_controller.go:180] edit failed with : Operation cannot be fulfilled on clusterroles.rbac.authorization.k8s.io \"edit\": the object has been modified; please apply your changes to the latest version and try again\n","stream":"stderr","time":"2019-08-12T08:36:47.20358369Z"}
{"log":"I0812 08:36:47.215631       1 controller_utils.go:1036] Caches are synced for ReplicationController controller\n","stream":"stderr","time":"2019-08-12T08:36:47.215939717Z"}
{"log":"I0812 08:36:47.215844       1 controller_utils.go:1036] Caches are synced for job controller\n","stream":"stderr","time":"2019-08-12T08:36:47.215972346Z"}
{"log":"I0812 08:36:47.220287       1 controller_utils.go:1036] Caches are synced for stateful set controller\n","stream":"stderr","time":"2019-08-12T08:36:47.220515002Z"}
{"log":"I0812 08:36:47.222187       1 controller_utils.go:1036] Caches are synced for PVC protection controller\n","stream":"stderr","time":"2019-08-12T08:36:47.222537639Z"}
{"log":"I0812 08:36:47.222678       1 controller_utils.go:1036] Caches are synced for disruption controller\n","stream":"stderr","time":"2019-08-12T08:36:47.222789405Z"}
{"log":"I0812 08:36:47.225260       1 disruption.go:341] Sending events to api server.\n","stream":"stderr","time":"2019-08-12T08:36:47.225374512Z"}
{"log":"I0812 08:36:47.225625       1 controller_utils.go:1036] Caches are synced for persistent volume controller\n","stream":"stderr","time":"2019-08-12T08:36:47.225780377Z"}
{"log":"I0812 08:36:47.240445       1 event.go:258] Event(v1.ObjectReference{Kind:\"Deployment\", Namespace:\"kube-system\", Name:\"coredns\", UID:\"a7dcf485-6fab-43f0-a8b8-200840249839\", APIVersion:\"apps/v1\", ResourceVersion:\"188\", FieldPath:\"\"}): type: 'Normal' reason: 'ScalingReplicaSet' Scaled up replica set coredns-5c98db65d4 to 2\n","stream":"stderr","time":"2019-08-12T08:36:47.240682522Z"}
{"log":"I0812 08:36:47.310302       1 event.go:258] Event(v1.ObjectReference{Kind:\"ReplicaSet\", Namespace:\"kube-system\", Name:\"coredns-5c98db65d4\", UID:\"d446372e-7163-4dc4-a6b9-5ed8b47b6062\", APIVersion:\"apps/v1\", ResourceVersion:\"347\", FieldPath:\"\"}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: coredns-5c98db65d4-8lrvq\n","stream":"stderr","time":"2019-08-12T08:36:47.315668448Z"}
{"log":"I0812 08:36:47.333259       1 event.go:258] Event(v1.ObjectReference{Kind:\"ReplicaSet\", Namespace:\"kube-system\", Name:\"coredns-5c98db65d4\", UID:\"d446372e-7163-4dc4-a6b9-5ed8b47b6062\", APIVersion:\"apps/v1\", ResourceVersion:\"347\", FieldPath:\"\"}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: coredns-5c98db65d4-6s4m4\n","stream":"stderr","time":"2019-08-12T08:36:47.333499282Z"}
{"log":"I0812 08:36:47.382065       1 controller_utils.go:1036] Caches are synced for daemon sets controller\n","stream":"stderr","time":"2019-08-12T08:36:47.382330427Z"}
{"log":"I0812 08:36:47.433899       1 event.go:258] Event(v1.ObjectReference{Kind:\"DaemonSet\", Namespace:\"kube-system\", Name:\"kube-proxy\", UID:\"038b799c-61aa-4dbf-902b-4aa6b75925ce\", APIVersion:\"apps/v1\", ResourceVersion:\"195\", FieldPath:\"\"}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: kube-proxy-prsnz\n","stream":"stderr","time":"2019-08-12T08:36:47.43418276Z"}
{"log":"E0812 08:36:47.467734       1 daemon_controller.go:302] kube-system/kube-proxy failed with : error storing status for daemon set \u0026v1.DaemonSet{TypeMeta:v1.TypeMeta{Kind:\"\", APIVersion:\"\"}, ObjectMeta:v1.ObjectMeta{Name:\"kube-proxy\", GenerateName:\"\", Namespace:\"kube-system\", SelfLink:\"/apis/apps/v1/namespaces/kube-system/daemonsets/kube-proxy\", UID:\"038b799c-61aa-4dbf-902b-4aa6b75925ce\", ResourceVersion:\"195\", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63701195791, loc:(*time.Location)(0x730cba0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{\"k8s-app\":\"kube-proxy\"}, Annotations:map[string]string{\"deprecated.daemonset.template.generation\":\"1\"}, OwnerReferences:[]v1.OwnerReference(nil), Initializers:(*v1.Initializers)(nil), Finalizers:[]string(nil), ClusterName:\"\", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.DaemonSetSpec{Selector:(*v1.LabelSelector)(0xc001748780), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:\"\", GenerateName:\"\", Namespace:\"\", SelfLink:\"\", UID:\"\", ResourceVersion:\"\", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{\"k8s-app\":\"kube-proxy\"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Initializers:(*v1.Initializers)(nil), Finalizers:[]string(nil), ClusterName:\"\", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:\"kube-proxy\", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(0xc0010422c0), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:\"xtables-lock\", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc0017487a0), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:\"lib-modules\", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc0017487c0), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}}, InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:\"kube-proxy\", Image:\"k8s.gcr.io/kube-proxy:v1.15.2\", Command:[]string{\"/usr/local/bin/kube-proxy\", \"--config=/var/lib/kube-proxy/config.conf\", \"--hostname-override=$(NODE_NAME)\"}, Args:[]string(nil), WorkingDir:\"\", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:\"NODE_NAME\", Value:\"\", ValueFrom:(*v1.EnvVarSource)(0xc001748800)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:\"kube-proxy\", ReadOnly:false, MountPath:\"/var/lib/kube-proxy\", SubPath:\"\", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:\"\"}, v1.VolumeMount{Name:\"xtables-lock\", ReadOnly:false, MountPath:\"/run/xtables.lock\", SubPath:\"\", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:\"\"}, v1.VolumeMount{Name:\"lib-modules\", ReadOnly:true, MountPath:\"/lib/modules\", SubPath:\"\", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:\"\"}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:\"/dev/termination-log\", TerminationMessagePolicy:\"File\", ImagePullPolicy:\"IfNotPresent\", SecurityContext:(*v1.SecurityContext)(0xc0000a89b0), Stdin:false, StdinOnce:false, TTY:false}}, RestartPolicy:\"Always\", TerminationGracePeriodSeconds:(*int64)(0xc000cd9178), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:\"ClusterFirst\", NodeSelector:map[string]string{\"beta.kubernetes.io/os\":\"linux\"}, ServiceAccountName:\"kube-proxy\", DeprecatedServiceAccount:\"kube-proxy\", AutomountServiceAccountToken:(*bool)(nil), NodeName:\"\", HostNetwork:true, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000f00fc0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:\"\", Subdomain:\"\", Affinity:(*v1.Affinity)(nil), SchedulerName:\"default-scheduler\", Tolerations:[]v1.Toleration{v1.Toleration{Key:\"CriticalAddonsOnly\", Operator:\"Exists\", Value:\"\", Effect:\"\", TolerationSeconds:(*int64)(nil)}, v1.Toleration{Key:\"\", Operator:\"Exists\", Value:\"\", Effect:\"\", TolerationSeconds:(*int64)(nil)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:\"system-node-critical\", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(nil), PreemptionPolicy:(*v1.PreemptionPolicy)(nil)}}, UpdateStrategy:v1.DaemonSetUpdateStrategy{Type:\"RollingUpdate\", RollingUpdate:(*v1.RollingUpdateDaemonSet)(0xc0001c42b0)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc000cd91e8)}, Status:v1.DaemonSetStatus{CurrentNumberScheduled:0, NumberMisscheduled:0, DesiredNumberScheduled:0, NumberReady:0, ObservedGeneration:0, UpdatedNumberScheduled:0, NumberAvailable:0, NumberUnavailable:0, CollisionCount:(*int32)(nil), Conditions:[]v1.DaemonSetCondition(nil)}}: Operation cannot be fulfilled on daemonsets.apps \"kube-proxy\": the object has been modified; please apply your changes to the latest version and try again\n","stream":"stderr","time":"2019-08-12T08:36:47.468040975Z"}
{"log":"I0812 08:36:47.476368       1 controller_utils.go:1036] Caches are synced for taint controller\n","stream":"stderr","time":"2019-08-12T08:36:47.477409988Z"}
{"log":"I0812 08:36:47.476449       1 node_lifecycle_controller.go:1159] Initializing eviction metric for zone: \n","stream":"stderr","time":"2019-08-12T08:36:47.477445037Z"}
{"log":"W0812 08:36:47.476639       1 node_lifecycle_controller.go:833] Missing timestamp for Node vishwanath-virtualbox. Assuming now as a timestamp.\n","stream":"stderr","time":"2019-08-12T08:36:47.47746936Z"}
{"log":"I0812 08:36:47.476686       1 node_lifecycle_controller.go:1009] Controller detected that all Nodes are not-Ready. Entering master disruption mode.\n","stream":"stderr","time":"2019-08-12T08:36:47.477478428Z"}
{"log":"I0812 08:36:47.476813       1 taint_manager.go:198] Starting NoExecuteTaintManager\n","stream":"stderr","time":"2019-08-12T08:36:47.477487283Z"}
{"log":"I0812 08:36:47.477079       1 event.go:258] Event(v1.ObjectReference{Kind:\"Node\", Namespace:\"\", Name:\"vishwanath-virtualbox\", UID:\"d8290aef-ece9-486f-8d47-5e7e7e4f31b4\", APIVersion:\"\", ResourceVersion:\"\", FieldPath:\"\"}): type: 'Normal' reason: 'RegisteredNode' Node vishwanath-virtualbox event: Registered Node vishwanath-virtualbox in Controller\n","stream":"stderr","time":"2019-08-12T08:36:47.477495837Z"}
{"log":"I0812 08:36:47.551421       1 controller_utils.go:1036] Caches are synced for endpoint controller\n","stream":"stderr","time":"2019-08-12T08:36:47.551861323Z"}
{"log":"I0812 08:36:47.572140       1 controller_utils.go:1036] Caches are synced for resource quota controller\n","stream":"stderr","time":"2019-08-12T08:36:47.573073664Z"}
{"log":"I0812 08:36:47.610395       1 controller_utils.go:1036] Caches are synced for garbage collector controller\n","stream":"stderr","time":"2019-08-12T08:36:47.61060779Z"}
{"log":"I0812 08:36:47.612288       1 controller_utils.go:1036] Caches are synced for resource quota controller\n","stream":"stderr","time":"2019-08-12T08:36:47.612676327Z"}
{"log":"I0812 08:36:47.621830       1 controller_utils.go:1036] Caches are synced for garbage collector controller\n","stream":"stderr","time":"2019-08-12T08:36:47.625270038Z"}
{"log":"I0812 08:36:47.621864       1 garbagecollector.go:137] Garbage collector: all resource monitors have synced. Proceeding to collect garbage\n","stream":"stderr","time":"2019-08-12T08:36:47.625292855Z"}
{"log":"I0812 08:41:58.260020       1 event.go:258] Event(v1.ObjectReference{Kind:\"DaemonSet\", Namespace:\"kube-system\", Name:\"weave-net\", UID:\"923b03da-3914-41ea-ae91-5a86da7a23b4\", APIVersion:\"apps/v1\", ResourceVersion:\"774\", FieldPath:\"\"}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: weave-net-sbq7l\n","stream":"stderr","time":"2019-08-12T08:41:58.260274492Z"}
{"log":"E0812 08:41:58.310560       1 daemon_controller.go:302] kube-system/weave-net failed with : error storing status for daemon set \u0026v1.DaemonSet{TypeMeta:v1.TypeMeta{Kind:\"\", APIVersion:\"\"}, ObjectMeta:v1.ObjectMeta{Name:\"weave-net\", GenerateName:\"\", Namespace:\"kube-system\", SelfLink:\"/apis/apps/v1/namespaces/kube-system/daemonsets/weave-net\", UID:\"923b03da-3914-41ea-ae91-5a86da7a23b4\", ResourceVersion:\"774\", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63701196118, loc:(*time.Location)(0x730cba0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{\"name\":\"weave-net\"}, Annotations:map[string]string{\"cloud.weave.works/launcher-info\":\"{\\n  \\\"original-request\\\": {\\n    \\\"url\\\": \\\"/k8s/v1.10/net.yaml?k8s-version=Q2xpZW50IFZlcnNpb246IHZlcnNpb24uSW5mb3tNYWpvcjoiMSIsIE1pbm9yOiIxNSIsIEdpdFZlcnNpb246InYxLjE1LjIiLCBHaXRDb21taXQ6ImY2Mjc4MzAwYmViYmI3NTAzMjhhYzE2ZWU2ZGQzYWE3ZDM1NDk1NjgiLCBHaXRUcmVlU3RhdGU6ImNsZWFuIiwgQnVpbGREYXRlOiIyMDE5LTA4LTA1VDA5OjIzOjI2WiIsIEdvVmVyc2lvbjoiZ28xLjEyLjUiLCBDb21waWxlcjoiZ2MiLCBQbGF0Zm9ybToibGludXgvYW1kNjQifQpTZXJ2ZXIgVmVyc2lvbjogdmVyc2lvbi5JbmZve01ham9yOiIxIiwgTWlub3I6IjE1IiwgR2l0VmVyc2lvbjoidjEuMTUuMiIsIEdpdENvbW1pdDoiZjYyNzgzMDBiZWJiYjc1MDMyOGFjMTZlZTZkZDNhYTdkMzU0OTU2OCIsIEdpdFRyZWVTdGF0ZToiY2xlYW4iLCBCdWlsZERhdGU6IjIwMTktMDgtMDVUMDk6MTU6MjJaIiwgR29WZXJzaW9uOiJnbzEuMTIuNSIsIENvbXBpbGVyOiJnYyIsIFBsYXRmb3JtOiJsaW51eC9hbWQ2NCJ9Cg==\\\",\\n    \\\"date\\\": \\\"Mon Aug 12 2019 08:41:57 GMT+0000 (UTC)\\\"\\n  },\\n  \\\"email-address\\\": \\\"support@weave.works\\\"\\n}\", \"deprecated.daemonset.template.generation\":\"1\", \"kubectl.kubernetes.io/last-applied-configuration\":\"{\\\"apiVersion\\\":\\\"extensions/v1beta1\\\",\\\"kind\\\":\\\"DaemonSet\\\",\\\"metadata\\\":{\\\"annotations\\\":{\\\"cloud.weave.works/launcher-info\\\":\\\"{\\\\n  \\\\\\\"original-request\\\\\\\": {\\\\n    \\\\\\\"url\\\\\\\": \\\\\\\"/k8s/v1.10/net.yaml?k8s-version=Q2xpZW50IFZlcnNpb246IHZlcnNpb24uSW5mb3tNYWpvcjoiMSIsIE1pbm9yOiIxNSIsIEdpdFZlcnNpb246InYxLjE1LjIiLCBHaXRDb21taXQ6ImY2Mjc4MzAwYmViYmI3NTAzMjhhYzE2ZWU2ZGQzYWE3ZDM1NDk1NjgiLCBHaXRUcmVlU3RhdGU6ImNsZWFuIiwgQnVpbGREYXRlOiIyMDE5LTA4LTA1VDA5OjIzOjI2WiIsIEdvVmVyc2lvbjoiZ28xLjEyLjUiLCBDb21waWxlcjoiZ2MiLCBQbGF0Zm9ybToibGludXgvYW1kNjQifQpTZXJ2ZXIgVmVyc2lvbjogdmVyc2lvbi5JbmZve01ham9yOiIxIiwgTWlub3I6IjE1IiwgR2l0VmVyc2lvbjoidjEuMTUuMiIsIEdpdENvbW1pdDoiZjYyNzgzMDBiZWJiYjc1MDMyOGFjMTZlZTZkZDNhYTdkMzU0OTU2OCIsIEdpdFRyZWVTdGF0ZToiY2xlYW4iLCBCdWlsZERhdGU6IjIwMTktMDgtMDVUMDk6MTU6MjJaIiwgR29WZXJzaW9uOiJnbzEuMTIuNSIsIENvbXBpbGVyOiJnYyIsIFBsYXRmb3JtOiJsaW51eC9hbWQ2NCJ9Cg==\\\\\\\",\\\\n    \\\\\\\"date\\\\\\\": \\\\\\\"Mon Aug 12 2019 08:41:57 GMT+0000 (UTC)\\\\\\\"\\\\n  },\\\\n  \\\\\\\"email-address\\\\\\\": \\\\\\\"support@weave.works\\\\\\\"\\\\n}\\\"},\\\"labels\\\":{\\\"name\\\":\\\"weave-net\\\"},\\\"name\\\":\\\"weave-net\\\",\\\"namespace\\\":\\\"kube-system\\\"},\\\"spec\\\":{\\\"minReadySeconds\\\":5,\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"name\\\":\\\"weave-net\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/home/weave/launch.sh\\\"],\\\"env\\\":[{\\\"name\\\":\\\"HOSTNAME\\\",\\\"valueFrom\\\":{\\\"fieldRef\\\":{\\\"apiVersion\\\":\\\"v1\\\",\\\"fieldPath\\\":\\\"spec.nodeName\\\"}}}],\\\"image\\\":\\\"docker.io/weaveworks/weave-kube:2.5.2\\\",\\\"name\\\":\\\"weave\\\",\\\"readinessProbe\\\":{\\\"httpGet\\\":{\\\"host\\\":\\\"127.0.0.1\\\",\\\"path\\\":\\\"/status\\\",\\\"port\\\":6784}},\\\"resources\\\":{\\\"requests\\\":{\\\"cpu\\\":\\\"10m\\\"}},\\\"securityContext\\\":{\\\"privileged\\\":true},\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/weavedb\\\",\\\"name\\\":\\\"weavedb\\\"},{\\\"mountPath\\\":\\\"/host/opt\\\",\\\"name\\\":\\\"cni-bin\\\"},{\\\"mountPath\\\":\\\"/host/home\\\",\\\"name\\\":\\\"cni-bin2\\\"},{\\\"mountPath\\\":\\\"/host/etc\\\",\\\"name\\\":\\\"cni-conf\\\"},{\\\"mountPath\\\":\\\"/host/var/lib/dbus\\\",\\\"name\\\":\\\"dbus\\\"},{\\\"mountPath\\\":\\\"/lib/modules\\\",\\\"name\\\":\\\"lib-modules\\\"},{\\\"mountPath\\\":\\\"/run/xtables.lock\\\",\\\"name\\\":\\\"xtables-lock\\\"}]},{\\\"env\\\":[{\\\"name\\\":\\\"HOSTNAME\\\",\\\"valueFrom\\\":{\\\"fieldRef\\\":{\\\"apiVersion\\\":\\\"v1\\\",\\\"fieldPath\\\":\\\"spec.nodeName\\\"}}}],\\\"image\\\":\\\"docker.io/weaveworks/weave-npc:2.5.2\\\",\\\"name\\\":\\\"weave-npc\\\",\\\"resources\\\":{\\\"requests\\\":{\\\"cpu\\\":\\\"10m\\\"}},\\\"securityContext\\\":{\\\"privileged\\\":true},\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/run/xtables.lock\\\",\\\"name\\\":\\\"xtables-lock\\\"}]}],\\\"hostNetwork\\\":true,\\\"hostPID\\\":true,\\\"restartPolicy\\\":\\\"Always\\\",\\\"securityContext\\\":{\\\"seLinuxOptions\\\":{}},\\\"serviceAccountName\\\":\\\"weave-net\\\",\\\"tolerations\\\":[{\\\"effect\\\":\\\"NoSchedule\\\",\\\"operator\\\":\\\"Exists\\\"}],\\\"volumes\\\":[{\\\"hostPath\\\":{\\\"path\\\":\\\"/var/lib/weave\\\"},\\\"name\\\":\\\"weavedb\\\"},{\\\"hostPath\\\":{\\\"path\\\":\\\"/opt\\\"},\\\"name\\\":\\\"cni-bin\\\"},{\\\"hostPath\\\":{\\\"path\\\":\\\"/home\\\"},\\\"name\\\":\\\"cni-bin2\\\"},{\\\"hostPath\\\":{\\\"path\\\":\\\"/etc\\\"},\\\"name\\\":\\\"cni-conf\\\"},{\\\"hostPath\\\":{\\\"path\\\":\\\"/var/lib/dbus\\\"},\\\"name\\\":\\\"dbus\\\"},{\\\"hostPath\\\":{\\\"path\\\":\\\"/lib/modules\\\"},\\\"name\\\":\\\"lib-modules\\\"},{\\\"hostPath\\\":{\\\"path\\\":\\\"/run/xtables.lock\\\",\\\"type\\\":\\\"FileOrCreate\\\"},\\\"name\\\":\\\"xtables-lock\\\"}]}},\\\"updateStrategy\\\":{\\\"type\\\":\\\"RollingUpdate\\\"}}}\\n\"}, OwnerReferences:[]v1.OwnerReference(nil), Initializers:(*v1.Initializers)(nil), Finalizers:[]string(nil), ClusterName:\"\", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.DaemonSetSpec{Selector:(*v1.LabelSelector)(0xc001cb0ec0), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:\"\", GenerateName:\"\", Namespace:\"\", SelfLink:\"\", UID:\"\", ResourceVersion:\"\", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{\"name\":\"weave-net\"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Initializers:(*v1.Initializers)(nil), Finalizers:[]string(nil), ClusterName:\"\", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:\"weavedb\", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001cb0ee0), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:\"cni-bin\", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001cb0f00), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:\"cni-bin2\", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001cb0f20), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:\"cni-conf\", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001cb0f40), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:\"dbus\", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001cb0f60), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:\"lib-modules\", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001cb0f80), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:\"xtables-lock\", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001cb0fa0), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}}, InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:\"weave\", Image:\"docker.io/weaveworks/weave-kube:2.5.2\", Command:[]string{\"/home/weave/launch.sh\"}, Args:[]string(nil), WorkingDir:\"\", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:\"HOSTNAME\", Value:\"\", ValueFrom:(*v1.EnvVarSource)(0xc001cb0fc0)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList{\"cpu\":resource.Quantity{i:resource.int64Amount{value:10, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:\"10m\", Format:\"DecimalSI\"}}}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:\"weavedb\", ReadOnly:false, MountPath:\"/weavedb\", SubPath:\"\", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:\"\"}, v1.VolumeMount{Name:\"cni-bin\", ReadOnly:false, MountPath:\"/host/opt\", SubPath:\"\", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:\"\"}, v1.VolumeMount{Name:\"cni-bin2\", ReadOnly:false, MountPath:\"/host/home\", SubPath:\"\", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:\"\"}, v1.VolumeMount{Name:\"cni-conf\", ReadOnly:false, MountPath:\"/host/etc\", SubPath:\"\", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:\"\"}, v1.VolumeMount{Name:\"dbus\", ReadOnly:false, MountPath:\"/host/var/lib/dbus\", SubPath:\"\", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:\"\"}, v1.VolumeMount{Name:\"lib-modules\", ReadOnly:false, MountPath:\"/lib/modules\", SubPath:\"\", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:\"\"}, v1.VolumeMount{Name:\"xtables-loc","stream":"stderr","time":"2019-08-12T08:41:58.310935475Z"}
{"log":"k\", ReadOnly:false, MountPath:\"/run/xtables.lock\", SubPath:\"\", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:\"\"}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(0xc001cdd830), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:\"/dev/termination-log\", TerminationMessagePolicy:\"File\", ImagePullPolicy:\"IfNotPresent\", SecurityContext:(*v1.SecurityContext)(0xc001243ea0), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:\"weave-npc\", Image:\"docker.io/weaveworks/weave-npc:2.5.2\", Command:[]string(nil), Args:[]string(nil), WorkingDir:\"\", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:\"HOSTNAME\", Value:\"\", ValueFrom:(*v1.EnvVarSource)(0xc001cb1000)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList{\"cpu\":resource.Quantity{i:resource.int64Amount{value:10, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:\"10m\", Format:\"DecimalSI\"}}}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:\"xtables-lock\", ReadOnly:false, MountPath:\"/run/xtables.lock\", SubPath:\"\", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:\"\"}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:\"/dev/termination-log\", TerminationMessagePolicy:\"File\", ImagePullPolicy:\"IfNotPresent\", SecurityContext:(*v1.SecurityContext)(0xc001243f40), Stdin:false, StdinOnce:false, TTY:false}}, RestartPolicy:\"Always\", TerminationGracePeriodSeconds:(*int64)(0xc001d33da8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:\"ClusterFirst\", NodeSelector:map[string]string(nil), ServiceAccountName:\"weave-net\", DeprecatedServiceAccount:\"weave-net\", AutomountServiceAccountToken:(*bool)(nil), NodeName:\"\", HostNetwork:true, HostPID:true, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc001362b40), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:\"\", Subdomain:\"\", Affinity:(*v1.Affinity)(nil), SchedulerName:\"default-scheduler\", Tolerations:[]v1.Toleration{v1.Toleration{Key:\"\", Operator:\"Exists\", Value:\"\", Effect:\"NoSchedule\", TolerationSeconds:(*int64)(nil)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:\"\", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(nil), PreemptionPolicy:(*v1.PreemptionPolicy)(nil)}}, UpdateStrategy:v1.DaemonSetUpdateStrategy{Type:\"RollingUpdate\", RollingUpdate:(*v1.RollingUpdateDaemonSet)(0xc0025309f8)}, MinReadySeconds:5, RevisionHistoryLimit:(*int32)(0xc001d33e6c)}, Status:v1.DaemonSetStatus{CurrentNumberScheduled:0, NumberMisscheduled:0, DesiredNumberScheduled:0, NumberReady:0, ObservedGeneration:0, UpdatedNumberScheduled:0, NumberAvailable:0, NumberUnavailable:0, CollisionCount:(*int32)(nil), Conditions:[]v1.DaemonSetCondition(nil)}}: Operation cannot be fulfilled on daemonsets.apps \"weave-net\": the object has been modified; please apply your changes to the latest version and try again\n","stream":"stderr","time":"2019-08-12T08:41:58.310935475Z"}
{"log":"I0812 08:42:42.611282       1 node_lifecycle_controller.go:1036] Controller detected that some Nodes are Ready. Exiting master disruption mode.\n","stream":"stderr","time":"2019-08-12T08:42:42.611930205Z"}
{"log":"W0812 09:02:59.234614       1 reflector.go:302] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.\n","stream":"stderr","time":"2019-08-12T09:02:59.237399579Z"}
{"log":"W0812 09:12:33.339937       1 reflector.go:302] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.\n","stream":"stderr","time":"2019-08-12T09:12:33.340776308Z"}
{"log":"W0812 09:21:31.381557       1 reflector.go:302] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.\n","stream":"stderr","time":"2019-08-12T09:21:31.381811392Z"}
{"log":"W0812 10:01:35.444907       1 reflector.go:302] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.\n","stream":"stderr","time":"2019-08-12T10:01:35.447606181Z"}
{"log":"W0812 10:18:01.552746       1 reflector.go:302] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.\n","stream":"stderr","time":"2019-08-12T10:18:01.553828233Z"}
{"log":"W0812 10:31:47.699074       1 reflector.go:302] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.\n","stream":"stderr","time":"2019-08-12T10:31:47.699987981Z"}
{"log":"I0812 10:36:42.309340       1 cleaner.go:166] Cleaning CSR \"csr-ct7ml\" as it is more than 1h0m0s old and approved.\n","stream":"stderr","time":"2019-08-12T10:36:42.327799238Z"}
{"log":"W0812 10:48:17.811564       1 reflector.go:302] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.\n","stream":"stderr","time":"2019-08-12T10:48:17.812202032Z"}
{"log":"W0812 10:57:29.907645       1 reflector.go:302] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.\n","stream":"stderr","time":"2019-08-12T10:57:29.908170524Z"}
{"log":"W0812 11:10:04.994343       1 reflector.go:302] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.\n","stream":"stderr","time":"2019-08-12T11:10:04.994923805Z"}
{"log":"W0812 11:19:18.048772       1 reflector.go:302] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.\n","stream":"stderr","time":"2019-08-12T11:19:18.049496737Z"}
{"log":"W0812 11:31:25.098389       1 reflector.go:302] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.\n","stream":"stderr","time":"2019-08-12T11:31:25.099061852Z"}
{"log":"W0812 11:50:25.124334       1 reflector.go:302] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.\n","stream":"stderr","time":"2019-08-12T11:50:25.124528961Z"}
{"log":"W0812 11:58:24.188136       1 reflector.go:302] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.\n","stream":"stderr","time":"2019-08-12T11:58:24.190317395Z"}
{"log":"W0812 12:06:34.213587       1 reflector.go:302] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.\n","stream":"stderr","time":"2019-08-12T12:06:34.21413562Z"}